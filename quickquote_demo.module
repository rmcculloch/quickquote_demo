<?php

/**
 * @file
 * A custom quote form for anyone visiting the site to use.
 */

/**
 * Implements hook_menu().
 *
 * Registers a form-based page that you can access at
 * "http://localhost/quickquote_demo".
 */
function quickquote_demo_menu() {
  return array(
    'quickquote_demo' => array(
      'title' => 'Quick Quote Demo Page',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('quickquote_demo_page'),
      'access arguments' => array('access content'),
    ),
  );
}

/**
 * A form with a dropdown. Options depend on choice made in previous dropdown.
 *
 * On changing the first dropdown, the options in the second are updated.
 */
function quickquote_demo_page($form, &$form_state) {
  // Rendering of message re seeking a formal quote.
  $form['intro_text'] = array(
    '#type' => 'markup',
    '#markup' => '<p style="color:red" >' . t('This page is only to demonstrate the \'Quick Quote\' module and contains no real products for offer') . '.</p>',
  );
  // Get the list of options to populate the first dropdown.
  $options_first = mymodule_first_dropdown_options();
  // If we have a value for the first dropdown from $form_state['values'] we
  // use this both as the default value for the first dropdown and also as a
  // parameter to pass to the function that retrieves the options for the
  // second dropdown.
  $value_dropdown_first = isset($form_state['values']['dropdown_first']) ?
  $form_state['values']['dropdown_first'] : key($options_first);
  $form['dropdown_first'] = array(
    '#type' => 'select',
    '#title' => t('Category'),
    '#options' => $options_first,
    '#required' => TRUE,
    '#default_value' => $value_dropdown_first,
    // Bind an ajax callback to the change event (which is the default for
    // the select form type) of the first dropdown. It will replace the second
    // dropdown when rebuilt.
    '#ajax' => array(
    // When 'event' occurs, Drupal will perform an ajax request in the
    // background. Usually the default value is sufficient (eg. change
    // for select elements), but valid values include any jQuery event,
    // most notably 'mousedown', 'blur', and 'submit'.
      'event' => 'change',
      'callback' => 'mymodule_ajax_callback',
      'wrapper' => 'dropdown_second_replace',
    ),
  );
  $form['dropdown_second'] = array(
    '#type' => 'markup',
    // The entire enclosing div created here gets replaced when
    // dropdown_first is changed.
    '#prefix' => '<div id="dropdown_second_replace">',
    '#suffix' => '</div>',
    // When the form is rebuilt during ajax processing, the
    // $value_dropdown_first variable will now have the new
    // value and so the options will change.
  );

  // Logic to determine how the wrapper is built after selecting
  // from the first dropdown. Note if you have any categories
  // that you cannot provide an instant quote for, you can
  // replace the 0 in the if statement below with the information
  // below (making sure to amend the category name/s), and
  // the person will receive the message below when selecting
  // one of these categories. You can add as many categories
  // as you want, simply by chaining additional categories to
  // the 'if' conditional.
  // e.g. if ($form_state['values']['dropdown_first'] == 'Category4' ||
  // $form_state['values']['dropdown_first'] == 'Category5') {
  if (0) {
    $form['dropdown_second']['#markup'] = '<p><font color = "red">' . t('Instant quote currently unavailable for this category. Please <a href="/contact">Contact Us</a> for a quote estimate or formal quote.') . '</font></p>';
  }
  else {
    $form['dropdown_second']['#type'] = 'select';
    $form['dropdown_second']['#title'] = t('Item');
    $form['dropdown_second']['#required'] = TRUE;
    $form['dropdown_second']['#options'] = mymodule_second_dropdown_options($value_dropdown_first);
  }

  // Form element for inputting number of samples.
  $form['quantity'] = array(
    '#title' => t('Quantity'),
    '#type' => 'textfield',
    '#maxlength' => 4,
    '#size' => 4,
    '#required' => TRUE,
    '#element_validate' => array('element_validate_integer_positive'),
    '#description' => t('Please note that the price per item may change depending on the quantity required.'),
  );

  // Form element for inputting promotion code.
  $form['promotion_code'] = array(
    '#title' => t('Promotion Code'),
    '#type' => 'textfield',
    '#size' => 12,
    '#description' => t('If available, please enter valid promotion code.'),
  );

  // Rendering of submit button.
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );

  // Rendering of message re seeking a formal quote.
  $form['help'] = array(
    '#type' => 'markup',
    '#markup' => '<p>' . t('Please <a href="/contact">Contact Us</a> if you have any queries and/or would like to receive a formal quote') . '.</p>',
  );
  return $form;
}

/**
 * Form validation.
 */
function quickquote_demo_page_validate($form, &$form_state) {
  if ($form_state['values']['dropdown_first'] == '-Select-') {
    form_set_error('dropdown_first', 'You must select a category.');
  }
}

/**
 * Selects just the second dropdown to be returned for re-rendering.
 *
 * Since the controlling logic for populating the form is in the form builder
 * function, all we do here is select the element and return it to be updated.
 *
 * return renderable array (the second dropdown)
 */
function mymodule_ajax_callback($form, $form_state) {
  return $form['dropdown_second'];
}

/**
 * Helper function to populate the first dropdown.
 *
 * This would normally be pulling data from the database.
 *
 * return array of options
 */
function mymodule_first_dropdown_options() {
  return array(
   // Define your categories here. Add or subtract lines as necessary.
    t('-Select-') => t('-Select-'),
    t('Accessories') => t('Accessories'),
    t('Batteries') => t('Batteries'),
    t('Care & Repair') => t('Care & Repair'),
    t('Oils & Additives') => t('Oils & Additives'),
    t('Spare Parts') => t('Spare Parts'),
    t('Tools') => t('Tools'),
  );
}

/**
 * Helper function to populate the second dropdown.
 *
 * This would normally be pulling data from the database.
 *
 * This will determine which set of options is returned.
 *
 * return array of options
 */
function mymodule_second_dropdown_options($key = '') {
  $options = array(
   // Define your items here and amend categories to match those defined above.
   // Add or subtract lines as required.
    t('Accessories') => array(
      t('Battery charger: part-123') => t('Battery charger: part-123'),
      t('Fuel can 20L: part-124') => t('Fuel can 20L: part-124'),
      t('Jockey wheel 12": part-125') => t('Jockey wheel 12": part-125'),
      t('Jumper cables: part-126') => t('Jumper cables: part-126'),
      t('Seat covers: part-127') => t('Seat covers: part-127')),
    t('Batteries') => array(
      t('Bosch high-power: part-128') => t('Bosch high-power: part-128'),
      t('Century medium: part-129') => t('Century medium: part-129'),
      t('Exide standard: part-130') => t('Exide standard: part-130'),
      t('Optima red: part-131') => t('Optima red: part-131'),
      t('Optima yellow: part-132') => t('Optima yellow: part-132')),
    t('Care & Repair') => array(
      t('Body filler: part-133') => t('Body filler: part-133'),
      t('Cutting compound: part-134') => t('Cutting compound: part-134'),
      t('Putty: part-135') => t('Putty: part-135'),
      t('Shampoo: part-136') => t('Shampoo: part-136'),
      t('Wax: part-137') => t('Wax: part-137')),
    t('Oils & Additives') => array(
      t('Castrol engine oil 4L: part-138') => t('Castrol engine oil 4L: part-138'),
      t('Mobil transmission fluid 1L: part-139') => t('Mobil transmission fluid 1L: part-139'),
      t('Penrite engine oil 6L: part-140') => t('Penrite engine oil 6L: part-140'),
      t('Valvoline engine oil 5L: part-141') => t('Valvoline engine oil 5L: part-141'),
      t('Wynns engine treatment 325ml: part-142') => t('Wynns engine treatment 325ml: part-142')),
    t('Spare Parts') => array(
      t('Bosch spark plugs x4: part-143') => t('Bosch spark plugs x4: part-143'),
      t('Mann air filter: part-144') => t('Mann air filter: part-144'),
      t('BMW water pump: part-145') => t('BMW water pump: part-145'),
      t('Champion oil filter: part-146') => t('Champion oil filter: part-146'),
      t('Honda fuel pump: part-147') => t('Honda fuel pump: part-147')),
    t('Tools') => array(
      t('Mechanics light: part-148') => t('Mechanics light: part-148'),
      t('Oil filter remover: part-149') => t('Oil filter remover: part-149'),
      t('Sidchrome wrench: part-150') => t('Sidchrome wrench: part-150'),
      t('Snap On torque wrench: part-151') => t('Snap On torque wrench: part-151'),
      t('Stanley screwdriver set: part-152') => t('Stanley screwdriver set: part-152')),
  );
  if (isset($options[$key])) {
    return $options[$key];
  }
  else {
    return array();
  }
}

/**
 * Form submission.
 */
function quickquote_demo_page_submit($form, &$form_state) {
  // This is where you can enter/change the $rate (i.e. price) variable for
  // each item. You can amend the category and item names and add/delete as
  // many items as necessary to match those defined above.
  if ($form_state['values']['dropdown_first'] === 'Accessories' && $form_state['values']['dropdown_second'] === 'Battery charger: part-123') {
    $rate = 130;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Accessories' && $form_state['values']['dropdown_second'] === 'Fuel can 20L: part-124') {
    $rate = 35;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Accessories' && $form_state['values']['dropdown_second'] === 'Jockey wheel 12": part-125') {
    $rate = 40;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Accessories' && $form_state['values']['dropdown_second'] === 'Jumper cables: part-126') {
    $rate = 30;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Accessories' && $form_state['values']['dropdown_second'] === 'Seat covers: part-127') {
    $rate = 70;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Batteries' && $form_state['values']['dropdown_second'] === 'Bosch high-power: part-128') {
    $rate = 175;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Batteries' && $form_state['values']['dropdown_second'] === 'Century medium: part-129') {
    $rate = 140;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Batteries' && $form_state['values']['dropdown_second'] === 'Exide standard: part-130') {
    $rate = 110;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Batteries' && $form_state['values']['dropdown_second'] === 'Optima red: part-131') {
    $rate = 300;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Batteries' && $form_state['values']['dropdown_second'] === 'Optima yellow: part-132') {
    $rate = 250;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Care & Repair' && $form_state['values']['dropdown_second'] === 'Body filler: part-133') {
    $rate = 40;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Care & Repair' && $form_state['values']['dropdown_second'] === 'Cutting compound: part-134') {
    $rate = 20;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Care & Repair' && $form_state['values']['dropdown_second'] === 'Putty: part-135') {
    $rate = 25;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Care & Repair' && $form_state['values']['dropdown_second'] === 'Shampoo: part-136') {
    $rate = 15;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Care & Repair' && $form_state['values']['dropdown_second'] === 'Wax: part-137') {
    $rate = 17;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Oils & Additives' && $form_state['values']['dropdown_second'] === 'Castrol engine oil 4L: part-138') {
    $rate = 35;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Oils & Additives' && $form_state['values']['dropdown_second'] === 'Mobil transmission fluid 1L: part-139') {
    $rate = 14;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Oils & Additives' && $form_state['values']['dropdown_second'] === 'Penrite engine oil 6L: part-140') {
    $rate = 60;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Oils & Additives' && $form_state['values']['dropdown_second'] === 'Valvoline engine oil 5L: part-141') {
    $rate = 52;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Oils & Additives' && $form_state['values']['dropdown_second'] === 'Wynns engine treatment 325ml: part-142') {
    $rate = 14;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Spare Parts' && $form_state['values']['dropdown_second'] === 'Bosch spark plugs x4: part-143') {
    $rate = 45;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Spare Parts' && $form_state['values']['dropdown_second'] === 'Mann air filter: part-144') {
    $rate = 30;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Spare Parts' && $form_state['values']['dropdown_second'] === 'BMW water pump: part-145') {
    $rate = 275;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Spare Parts' && $form_state['values']['dropdown_second'] === 'Champion oil filter: part-146') {
    $rate = 25;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Spare Parts' && $form_state['values']['dropdown_second'] === 'Honda fuel pump: part-147') {
    $rate = 125;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Tools' && $form_state['values']['dropdown_second'] === 'Mechanics light: part-148') {
    $rate = 60;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Tools' && $form_state['values']['dropdown_second'] === 'Oil filter remover: part-149') {
    $rate = 13;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Tools' && $form_state['values']['dropdown_second'] === 'Sidchrome wrench: part-150') {
    $rate = 45;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Tools' && $form_state['values']['dropdown_second'] === 'Snap On torque wrench: part-151') {
    $rate = 120;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Tools' && $form_state['values']['dropdown_second'] === 'Stanley screwdriver set: part-152') {
    $rate = 70;
  }

  // This is where the logic is applied to determine whether an additional
  // handling fee will apply. This is a flat fee added to the end of the
  // price calculation, and is represented by the amount (in dollars) which
  // you set for the $surcharge variable below. The threshold
  // (i.e. the quantity below which the surcharge will apply) and surcharge
  // can be set for each individual item. If you wish to use this feature,
  // simply amend the category name, item name, threshold and surcharge
  // amounts to suit your requirements. If you need to add further items,
  // just copy and add another 'elseif' block for each item and amend as
  // required.
  // Item-1
  if ($form_state['values']['quantity'] < 5  && $form_state['values']['dropdown_first'] === 'Care & Repair' && $form_state['values']['dropdown_second'] === 'Putty: part-135') {
    drupal_set_message(t('An additional handling fee applies for quantities below @threshold', array('@threshold' => 5)));
    $surcharge = 10;
  }
  elseif ($form_state['values']['quantity'] < 10 && $form_state['values']['dropdown_first'] === 'Oils & Additives' && $form_state['values']['dropdown_second'] === 'Mobil transmission fluid 1L: part-139') {
    drupal_set_message(t('An additional handling fee applies for quantities below @threshold', array('@threshold' => 10)));
    $surcharge = 15;
  }
  else {
    // Leave this value at 0
    $surcharge = 0;
  }

  // This is where you can change the $discount variables that represent
  // the percentage discount based on the quantity of the item the person
  // wants. For example, 0.2 represents a discount of 20% off the standard
  // rate. You can also adjust the quantity ranges the discounts
  // apply to. If you wish to use this feature for a single item, simply
  // uncomment the entire block of code below and amend the category name,
  // item name, discounts and quantity ranges to suit your requirements.
  // If you need to add further items, just copy and add the code block
  // and amend as required for each item.
  //
  // Item-1
  if ($form_state['values']['dropdown_first'] === 'Spare Parts' && $form_state['values']['dropdown_second'] === 'BMW water pump: part-145' && $form_state['values']['quantity'] <= 1) {
    $discount = 0;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Spare Parts' && $form_state['values']['dropdown_second'] === 'BMW water pump: part-145' && $form_state['values']['quantity'] >= 2 && $form_state['values']['quantity'] <= 4) {
    $discount = 0.05;
    drupal_set_message(t('A discount of @discount% has been applied to the regular price', array('@discount' => $discount * 100)));
  }
  elseif ($form_state['values']['dropdown_first'] === 'Spare Parts' && $form_state['values']['dropdown_second'] === 'BMW water pump: part-145' && $form_state['values']['quantity'] >= 5 && $form_state['values']['quantity'] <= 10) {
    $discount = 0.10;
    drupal_set_message(t('A discount of @discount% has been applied to the regular price', array('@discount' => $discount * 100)));
  }
  elseif ($form_state['values']['dropdown_first'] === 'Spare Parts' && $form_state['values']['dropdown_second'] === 'BMW water pump: part-145' && $form_state['values']['quantity'] >= 11  && $form_state['values']['quantity'] <= 15) {
    $discount = 0.15;
    drupal_set_message(t('A discount of @discount% has been applied to the regular price', array('@discount' => $discount * 100)));
  }
  elseif ($form_state['values']['dropdown_first'] === 'Spare Parts' && $form_state['values']['dropdown_second'] === 'BMW water pump: part-145' && $form_state['values']['quantity'] >= 16) {
    $discount = 0.20;
    drupal_set_message(t('A discount of @discount% has been applied to the regular price', array('@discount' => $discount * 100)));
  }
  // Item-2
  if ($form_state['values']['dropdown_first'] === 'Batteries' && $form_state['values']['dropdown_second'] === 'Optima red: part-131' && $form_state['values']['quantity'] <= 2) {
    $discount = 0;
  }
  elseif ($form_state['values']['dropdown_first'] === 'Batteries' && $form_state['values']['dropdown_second'] === 'Optima red: part-131' && $form_state['values']['quantity'] >= 3 && $form_state['values']['quantity'] <= 6) {
    $discount = 0.10;
    drupal_set_message(t('A discount of @discount% has been applied to the regular price', array('@discount' => $discount * 100)));
  }
  elseif ($form_state['values']['dropdown_first'] === 'Batteries' && $form_state['values']['dropdown_second'] === 'Optima red: part-131' && $form_state['values']['quantity'] >= 7 && $form_state['values']['quantity'] <= 12) {
    $discount = 0.20;
    drupal_set_message(t('A discount of @discount% has been applied to the regular price', array('@discount' => $discount * 100)));
  }
  elseif ($form_state['values']['dropdown_first'] === 'Batteries' && $form_state['values']['dropdown_second'] === 'Optima red: part-131' && $form_state['values']['quantity'] >= 13  && $form_state['values']['quantity'] <= 18) {
    $discount = 0.30;
    drupal_set_message(t('A discount of @discount% has been applied to the regular price', array('@discount' => $discount * 100)));
  }
  elseif ($form_state['values']['dropdown_first'] === 'Batteries' && $form_state['values']['dropdown_second'] === 'Optima red: part-131' && $form_state['values']['quantity'] >= 19) {
    $discount = 0.35;
    drupal_set_message(t('A discount of @discount% has been applied to the regular price', array('@discount' => $discount * 100)));
  }

  // This is where you can change the promotion code which can be a number
  // (e.g. 12345) or a string (e.g. 'DISCOUNT'). Is case sensitive.
  // An expiry date for entering the promotion code has also been included
  // and which can be changed below.
  if ($form_state['values']['promotion_code'] == '12345' && strtotime('now') <= strtotime("30 June 2020 23:59:59")) {
    // This is where you can change the amount of the discount applied when
    // customers enter the correct promotion code (e.g. 0.2 applies a 20%
    // discount off the total quote).
    $promotion = 0.10;
    drupal_set_message(t("A valid promotion code has been entered and a @promotion% discount has been applied.", array('@promotion' => $promotion * 100)));
  }
  elseif ($form_state['values']['promotion_code'] == '') {
  }
  else {
    $promotion = 0;
    drupal_set_message(t("The promotion code you have entered is not valid."));
  }

  // This is the calculation of the final price and the message related to it.
  $quote = (($form_state['values']['quantity']) * ($rate) * (1 - $discount) + $surcharge);
  $quote = $quote * (1 - $promotion);
  $cost_per_item = ($quote / $form_state['values']['quantity']);
  if ($quote <= 0) {
    drupal_set_message(t('There has been a problem. Please ensure your browser has Javascript enabled'), 'error');
  }
  else {
    drupal_set_message(t("Your estimated quote for @number items of @category (@item) is $@quote. This is a cost of $@cost_per_item per item.", array(
     '@category' => $form_state['values']['dropdown_first'],
     '@item' => $form_state['values']['dropdown_second'],
     '@number' => number_format($form_state['values']['quantity']),
     '@quote' => number_format($quote, 2, '.', ','),
     '@cost_per_item' => number_format($cost_per_item, 2, '.', ','),)));
  }

  // Parameters being fed into drupal_mail function which allows them to be used
  // in hook_mail.
  $params = array(
    '@category' => $form_state['values']['dropdown_first'],
    '@item' => $form_state['values']['dropdown_second'],
    '@number' => $form_state['values']['quantity'],
    '@quote' => $quote,
    '@promotion' => $promotion,
  );

  // Calling of drupal_mail function which sends mail to the administrator for
  // every form submission (i.e. everytime someone requests a quote).
  // If you wish to use this feature, simply uncomment the single line of code
  // below and change the email address to the one you wish to use.
  drupal_mail('quickquote_demo', 'quickquote_demo_email', 'webmaster@domain.com', language_default(), $params);
}

/**
 * Implements hook_mail().
 */
function quickquote_demo_mail($key, &$message, $params) {
  switch ($key) {
    case 'quickquote_demo_email':
      $message['subject'] = t('Demo Quickquote Form Used');
      $message['body'][] = t("Your estimated quote is $") . number_format($params['@quote'], 2, '.', ',') . '<span> </span>' . t("for") . '<span> </span>' . $params['@category'] . '<span> </span>' . t("(") . $params['@item'] . t(") of") . '<span> </span>' . $params['@number'] . '<span> </span>' . t("items.");
      $message['body'][] = t("A promotional discount of") . '<span> </span>' . $params['@promotion'] * 100 . t("% was applied to this quote request.");
      break;
  }
}

// To report all errors but not notices.
error_reporting(E_ALL ^ E_NOTICE);
